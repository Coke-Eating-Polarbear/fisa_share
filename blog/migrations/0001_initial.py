# Generated by Django 5.1.1 on 2024-11-28 14:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Average",
            fields=[
                (
                    "stageclass",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("inlevel", models.IntegerField()),
                ("spend", models.BigIntegerField()),
                ("income", models.BigIntegerField()),
                ("asset", models.BigIntegerField()),
                ("finance", models.BigIntegerField()),
                ("estate", models.BigIntegerField()),
                ("etc", models.BigIntegerField()),
                ("debt", models.BigIntegerField()),
                ("eat", models.DecimalField(decimal_places=2, max_digits=4)),
                ("transfer", models.DecimalField(decimal_places=2, max_digits=4)),
                ("utility", models.DecimalField(decimal_places=2, max_digits=4)),
                ("phone", models.DecimalField(decimal_places=2, max_digits=4)),
                ("home", models.DecimalField(decimal_places=2, max_digits=4)),
                ("hobby", models.DecimalField(decimal_places=2, max_digits=4)),
                ("fashion", models.DecimalField(decimal_places=2, max_digits=4)),
                ("party", models.DecimalField(decimal_places=2, max_digits=4)),
                ("allowance", models.DecimalField(decimal_places=2, max_digits=4)),
                ("study", models.DecimalField(decimal_places=2, max_digits=4)),
                ("medical", models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                "db_table": "average",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Favorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "favorite",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MyDataDS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("CustomerID", models.CharField(max_length=256)),
                ("AccountID", models.CharField(max_length=256)),
                ("bank_name", models.CharField(max_length=256)),
                ("pname", models.CharField(max_length=256)),
                ("balance", models.BigIntegerField()),
                ("ds_rate", models.DecimalField(decimal_places=2, max_digits=4)),
                ("end_date", models.DateField()),
            ],
            options={
                "db_table": "mydata_ds",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SpendAmount",
            fields=[
                (
                    "CustomerID",
                    models.CharField(max_length=256, primary_key=True, serialize=False),
                ),
                ("SDate", models.CharField(max_length=20)),
                ("eat_amount", models.IntegerField(blank=True, null=True)),
                ("transfer_amount", models.IntegerField(blank=True, null=True)),
                ("utility_amount", models.IntegerField(blank=True, null=True)),
                ("phone_amount", models.IntegerField(blank=True, null=True)),
                ("home_amount", models.IntegerField(blank=True, null=True)),
                ("hobby_amount", models.IntegerField(blank=True, null=True)),
                ("fashion_amount", models.IntegerField(blank=True, null=True)),
                ("party_amount", models.IntegerField(blank=True, null=True)),
                ("allowance_amount", models.IntegerField(blank=True, null=True)),
                ("study_amount", models.IntegerField(blank=True, null=True)),
                ("medical_amount", models.IntegerField(blank=True, null=True)),
                ("TotalAmount", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "spend_amount",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="card",
            fields=[
                (
                    "cardID",
                    models.CharField(max_length=256, primary_key=True, serialize=False),
                ),
                ("cardName", models.CharField(max_length=256)),
                ("benefits", models.CharField(max_length=256)),
                ("image", models.CharField(max_length=256)),
                ("details", models.TextField()),
                ("url", models.CharField(max_length=256)),
                ("cardType", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "card",
            },
        ),
        migrations.CreateModel(
            name="DProduct",
            fields=[
                (
                    "dsid",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("bank", models.CharField(blank=True, max_length=255, null=True)),
                ("baser", models.FloatField(blank=True, null=True)),
                ("maxir", models.FloatField(blank=True, null=True)),
                ("dtype", models.CharField(blank=True, max_length=255, null=True)),
                ("period", models.CharField(blank=True, max_length=255, null=True)),
                ("amount", models.CharField(blank=True, max_length=255, null=True)),
                ("method", models.TextField(blank=True, null=True)),
                ("customer", models.CharField(blank=True, max_length=255, null=True)),
                ("benefits", models.TextField(blank=True, null=True)),
                ("interestpay", models.TextField(blank=True, null=True)),
                ("notice", models.TextField(blank=True, null=True)),
                ("protect", models.TextField(blank=True, null=True)),
                ("conddesc", models.TextField(blank=True, null=True)),
                ("condit", models.TextField(blank=True, null=True)),
                ("ratetype", models.CharField(blank=True, max_length=255, null=True)),
                ("dsname", models.CharField(blank=True, max_length=255, null=True)),
                ("deep", models.CharField(blank=True, max_length=255, null=True)),
                ("big_clu", models.CharField(blank=True, max_length=255, null=True)),
                ("joincond", models.TextField(blank=True, null=True)),
                ("cluster", models.IntegerField(blank=True, null=True)),
                ("token", models.CharField(blank=True, max_length=255, null=True)),
                ("mindate", models.CharField(blank=True, max_length=255, null=True)),
                ("maxdate", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "d_product",
            },
        ),
        migrations.CreateModel(
            name="DsProduct",
            fields=[
                (
                    "dsid",
                    models.CharField(max_length=256, primary_key=True, serialize=False),
                ),
                ("bank", models.CharField(max_length=256)),
                ("baser", models.TextField()),
                ("maxir", models.TextField()),
                ("dstype", models.CharField(max_length=256)),
                ("dsname", models.CharField(max_length=256)),
            ],
            options={
                "db_table": "ds_product",
            },
        ),
        migrations.CreateModel(
            name="MyDataAsset",
            fields=[
                (
                    "CustomerID",
                    models.CharField(max_length=256, primary_key=True, serialize=False),
                ),
                ("income", models.IntegerField()),
                ("total", models.BigIntegerField()),
                ("estate", models.BigIntegerField()),
                ("ect", models.BigIntegerField()),
                ("monthly_income", models.FloatField()),
                ("financial", models.FloatField()),
                ("debt", models.FloatField()),
                ("total_income", models.FloatField()),
            ],
            options={
                "db_table": "mydata_asset",
            },
        ),
        migrations.CreateModel(
            name="MyDataPay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("CustomerID", models.CharField(max_length=256)),
                ("pdate", models.DateField()),
                ("bizcode", models.CharField(max_length=256)),
                ("store", models.CharField(max_length=256)),
                ("price", models.IntegerField()),
                ("type", models.CharField(max_length=256)),
            ],
            options={
                "db_table": "mydata_pay",
            },
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("norder", models.IntegerField()),
                ("ndate", models.DateField()),
                ("title", models.CharField(max_length=256)),
                ("content", models.TextField()),
                ("url", models.CharField(max_length=256)),
                ("summary", models.TextField()),
            ],
            options={
                "db_table": "news",
            },
        ),
        migrations.CreateModel(
            name="spend",
            fields=[
                (
                    "CustomerID",
                    models.CharField(max_length=256, primary_key=True, serialize=False),
                ),
                ("SDate", models.DateField()),
                ("Category", models.CharField(max_length=256)),
                ("Frequency", models.IntegerField()),
                ("Amount", models.BigIntegerField()),
            ],
            options={
                "db_table": "spend",
            },
        ),
        migrations.CreateModel(
            name="SProduct",
            fields=[
                ("dsid", models.IntegerField(primary_key=True, serialize=False)),
                ("product_name", models.CharField(max_length=255)),
                ("bank_name", models.CharField(max_length=255)),
                ("base_rate", models.FloatField()),
                ("max_preferential_rate", models.FloatField()),
                ("product_type", models.CharField(max_length=255)),
                ("period", models.CharField(max_length=255)),
                ("amount", models.CharField(max_length=255)),
                (
                    "signup_method",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("target", models.TextField()),
                (
                    "saving_method",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("preferential_conditions", models.CharField(max_length=255)),
                (
                    "interest_payment",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "deposit_protection",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("approval", models.CharField(blank=True, max_length=255, null=True)),
                ("preferential_rate_conditions", models.TextField()),
                (
                    "preferential_conditions_description",
                    models.TextField(blank=True, null=True),
                ),
                ("rate_type", models.CharField(max_length=255)),
                ("details", models.TextField(blank=True, null=True)),
                ("main_category", models.CharField(max_length=255)),
                ("cluster1", models.IntegerField()),
                ("tokenized_texts", models.TextField()),
                ("min_period", models.FloatField(blank=True, null=True)),
                ("max_period", models.FloatField(blank=True, null=True)),
                ("max_amount", models.FloatField(blank=True, null=True)),
                ("min_amount", models.FloatField(blank=True, null=True)),
                ("min_duration", models.FloatField(blank=True, null=True)),
                ("max_duration", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "s_product",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "CustomerID",
                    models.CharField(
                        max_length=100, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("Pw", models.CharField(max_length=100)),
                ("Email", models.EmailField(max_length=254, unique=True)),
                ("username", models.CharField(max_length=100)),
                ("Birth", models.CharField(max_length=6)),
                ("SerialNum", models.CharField(max_length=1)),
                ("Phone", models.CharField(max_length=11)),
                ("sex", models.CharField(blank=True, max_length=1)),
                ("Stageclass", models.CharField(max_length=1)),
                ("Inlevel", models.SmallIntegerField()),
            ],
            options={
                "db_table": "usertable",
            },
        ),
        migrations.CreateModel(
            name="Wc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("image", models.BinaryField()),
            ],
            options={
                "db_table": "wc",
            },
        ),
        migrations.CreateModel(
            name="Recommend",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "DSID",
                    models.ForeignKey(
                        db_column="DSID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="blog.dsproduct",
                    ),
                ),
                (
                    "CustomerID",
                    models.ForeignKey(
                        db_column="CustomerID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="blog.userprofile",
                    ),
                ),
            ],
            options={
                "db_table": "recommend",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("CustomerID", "DSID"), name="unique_recommend"
                    )
                ],
            },
        ),
    ]
